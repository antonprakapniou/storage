// <auto-generated />

#nullable disable

namespace Storage.Core.EF.Migrations;

[DbContext(typeof(ApiDbContext))]
[Migration("20230215064600_CreateDbWithAllTables")]
partial class CreateDbWithAllTables
{
    /// <inheritdoc />
    protected override void BuildTargetModel(ModelBuilder modelBuilder)
    {
#pragma warning disable 612, 618
        modelBuilder.HasAnnotation("ProductVersion", "7.0.3");

        modelBuilder.Entity("Storage.Core.Models.Author", b =>
            {
                b.Property<Guid>("Id")
                    .ValueGeneratedOnAdd()
                    .HasColumnType("TEXT")
                    .HasColumnName("Id");

                b.Property<string>("Name")
                    .IsRequired()
                    .HasColumnType("TEXT")
                    .HasColumnName("Name");

                b.HasKey("Id")
                    .HasName("Id");

                b.ToTable("Authors", (string)null);
            });

        modelBuilder.Entity("Storage.Core.Models.Book", b =>
            {
                b.Property<Guid>("Id")
                    .ValueGeneratedOnAdd()
                    .HasColumnType("TEXT")
                    .HasColumnName("Id");

                b.Property<Guid?>("AithorId")
                    .HasColumnType("TEXT");

                b.Property<Guid?>("AuthorId")
                    .HasColumnType("TEXT");

                b.Property<string>("Name")
                    .IsRequired()
                    .HasColumnType("TEXT")
                    .HasColumnName("Name");

                b.Property<Guid?>("TopicId")
                    .HasColumnType("TEXT");

                b.HasKey("Id")
                    .HasName("Id");

                b.HasIndex("AuthorId");

                b.HasIndex("TopicId");

                b.ToTable("Books", (string)null);
            });

        modelBuilder.Entity("Storage.Core.Models.Topic", b =>
            {
                b.Property<Guid>("Id")
                    .ValueGeneratedOnAdd()
                    .HasColumnType("TEXT")
                    .HasColumnName("Id");

                b.Property<string>("Name")
                    .IsRequired()
                    .HasColumnType("TEXT")
                    .HasColumnName("Name");

                b.HasKey("Id")
                    .HasName("Id");

                b.ToTable("Topics", (string)null);
            });

        modelBuilder.Entity("Storage.Core.Models.Book", b =>
            {
                b.HasOne("Storage.Core.Models.Author", "Author")
                    .WithMany("Books")
                    .HasForeignKey("AuthorId");

                b.HasOne("Storage.Core.Models.Topic", "Topic")
                    .WithMany("Books")
                    .HasForeignKey("TopicId");

                b.Navigation("Author");

                b.Navigation("Topic");
            });

        modelBuilder.Entity("Storage.Core.Models.Author", b =>
            {
                b.Navigation("Books");
            });

        modelBuilder.Entity("Storage.Core.Models.Topic", b =>
            {
                b.Navigation("Books");
            });
#pragma warning restore 612, 618
    }
}
